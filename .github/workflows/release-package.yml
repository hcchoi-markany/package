name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]
jobs:
  build-and-package:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm install -g yarn
      - run: yarn
      - run: yarn build

      - uses: actions/upload-artifact@v3
        with:
          name: web-build # Job Artifact의 이름으로 설정 및 Artifact를 가져오는데 사용
          path: /home/runner/work/package/package/dist # 폴더 지정 : 이 폴더 아래의 모든 파일들이 하나의 artifact로 저장된다.

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ACTION_TOKEN }}

      - name: Added environment variable for version.
        id: version
        run: |
          echo "GIT_SHORT_COMMIT_ID=$(git rev-parse —short HEAD)" >> $GITHUB_OUTPUT
          echo "BUILD_TIME=$(date +'%Y-%m-%d_%H:%M')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.REGISTRY }}/${{ github.repository }}/dev-hong

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    deploy:
    # Add a dependency to the build job
    needs: build-and-package

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: web-build # 위의 upload-artifact에서 설정한 name

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.ACTION_TOKEN }}
          publish_dir: ./dist